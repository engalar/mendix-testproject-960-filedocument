// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package databasereplication.proxies;

public class ColumnMapping
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject columnMappingMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DatabaseReplication.ColumnMapping";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		MappingType("MappingType"),
		QueryType("QueryType"),
		SelectStatement("SelectStatement"),
		IsKey("IsKey"),
		SearchCaseSensitive("SearchCaseSensitive"),
		UseFormatMicroflow("UseFormatMicroflow"),
		Info_MxMapping("Info_MxMapping"),
		Info_DbMapping("Info_DbMapping"),
		FindAttribute("FindAttribute"),
		FindReference("FindReference"),
		FindObjectType("FindObjectType"),
		FormLayout_TableSelected("FormLayout_TableSelected"),
		IsValid("IsValid"),
		IsStored("IsStored"),
		IsAssociationKey("IsAssociationKey"),
		ShowSelectStatement("ShowSelectStatement"),
		ShowCustomQuery("ShowCustomQuery"),
		ColumnMapping_Column("DatabaseReplication.ColumnMapping_Column"),
		ColumnMapping_TableMapping("DatabaseReplication.ColumnMapping_TableMapping"),
		ColumnMapping_AdditionalJoins("DatabaseReplication.ColumnMapping_AdditionalJoins"),
		ColumnMapping_ColumnTemp("DatabaseReplication.ColumnMapping_ColumnTemp"),
		ColumnMapping_AdditionalJoinTemp("DatabaseReplication.ColumnMapping_AdditionalJoinTemp"),
		ColumnMapping_MxObjectReferenceTemp("DatabaseReplication.ColumnMapping_MxObjectReferenceTemp"),
		ColumnMapping_MxObjectMember("DatabaseReplication.ColumnMapping_MxObjectMember"),
		ColumnMapping_Microflows("DatabaseReplication.ColumnMapping_Microflows"),
		ColumnMapping_MxObjectReference("DatabaseReplication.ColumnMapping_MxObjectReference"),
		ColumnMapping_MxObjectType("DatabaseReplication.ColumnMapping_MxObjectType");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ColumnMapping(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DatabaseReplication.ColumnMapping"));
	}

	protected ColumnMapping(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject columnMappingMendixObject)
	{
		if (columnMappingMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("DatabaseReplication.ColumnMapping", columnMappingMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DatabaseReplication.ColumnMapping");

		this.columnMappingMendixObject = columnMappingMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'ColumnMapping.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static databasereplication.proxies.ColumnMapping initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return databasereplication.proxies.ColumnMapping.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static databasereplication.proxies.ColumnMapping initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new databasereplication.proxies.ColumnMapping(context, mendixObject);
	}

	public static databasereplication.proxies.ColumnMapping load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return databasereplication.proxies.ColumnMapping.initialize(context, mendixObject);
	}

	public static java.util.List<databasereplication.proxies.ColumnMapping> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<databasereplication.proxies.ColumnMapping> result = new java.util.ArrayList<databasereplication.proxies.ColumnMapping>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//DatabaseReplication.ColumnMapping" + xpathConstraint))
			result.add(databasereplication.proxies.ColumnMapping.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of MappingType
	 * @param mappingtype
	 */
	public final databasereplication.proxies.MappingType getMappingType()
	{
		return getMappingType(getContext());
	}

	/**
	 * @param context
	 * @return value of MappingType
	 */
	public final databasereplication.proxies.MappingType getMappingType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.MappingType.toString());
		if (obj == null)
			return null;

		return databasereplication.proxies.MappingType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of MappingType
	 * @param mappingtype
	 */
	public final void setMappingType(databasereplication.proxies.MappingType mappingtype)
	{
		setMappingType(getContext(), mappingtype);
	}

	/**
	 * Set value of MappingType
	 * @param context
	 * @param mappingtype
	 */
	public final void setMappingType(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.MappingType mappingtype)
	{
		if (mappingtype != null)
			getMendixObject().setValue(context, MemberNames.MappingType.toString(), mappingtype.toString());
		else
			getMendixObject().setValue(context, MemberNames.MappingType.toString(), null);
	}

	/**
	 * Set value of QueryType
	 * @param querytype
	 */
	public final databasereplication.proxies.QueryType getQueryType()
	{
		return getQueryType(getContext());
	}

	/**
	 * @param context
	 * @return value of QueryType
	 */
	public final databasereplication.proxies.QueryType getQueryType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.QueryType.toString());
		if (obj == null)
			return null;

		return databasereplication.proxies.QueryType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of QueryType
	 * @param querytype
	 */
	public final void setQueryType(databasereplication.proxies.QueryType querytype)
	{
		setQueryType(getContext(), querytype);
	}

	/**
	 * Set value of QueryType
	 * @param context
	 * @param querytype
	 */
	public final void setQueryType(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.QueryType querytype)
	{
		if (querytype != null)
			getMendixObject().setValue(context, MemberNames.QueryType.toString(), querytype.toString());
		else
			getMendixObject().setValue(context, MemberNames.QueryType.toString(), null);
	}

	/**
	 * @return value of SelectStatement
	 */
	public final java.lang.String getSelectStatement()
	{
		return getSelectStatement(getContext());
	}

	/**
	 * @param context
	 * @return value of SelectStatement
	 */
	public final java.lang.String getSelectStatement(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.SelectStatement.toString());
	}

	/**
	 * Set value of SelectStatement
	 * @param selectstatement
	 */
	public final void setSelectStatement(java.lang.String selectstatement)
	{
		setSelectStatement(getContext(), selectstatement);
	}

	/**
	 * Set value of SelectStatement
	 * @param context
	 * @param selectstatement
	 */
	public final void setSelectStatement(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String selectstatement)
	{
		getMendixObject().setValue(context, MemberNames.SelectStatement.toString(), selectstatement);
	}

	/**
	 * @return value of IsKey
	 */
	public final java.lang.Boolean getIsKey()
	{
		return getIsKey(getContext());
	}

	/**
	 * @param context
	 * @return value of IsKey
	 */
	public final java.lang.Boolean getIsKey(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsKey.toString());
	}

	/**
	 * Set value of IsKey
	 * @param iskey
	 */
	public final void setIsKey(java.lang.Boolean iskey)
	{
		setIsKey(getContext(), iskey);
	}

	/**
	 * Set value of IsKey
	 * @param context
	 * @param iskey
	 */
	public final void setIsKey(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean iskey)
	{
		getMendixObject().setValue(context, MemberNames.IsKey.toString(), iskey);
	}

	/**
	 * @return value of SearchCaseSensitive
	 */
	public final java.lang.Boolean getSearchCaseSensitive()
	{
		return getSearchCaseSensitive(getContext());
	}

	/**
	 * @param context
	 * @return value of SearchCaseSensitive
	 */
	public final java.lang.Boolean getSearchCaseSensitive(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SearchCaseSensitive.toString());
	}

	/**
	 * Set value of SearchCaseSensitive
	 * @param searchcasesensitive
	 */
	public final void setSearchCaseSensitive(java.lang.Boolean searchcasesensitive)
	{
		setSearchCaseSensitive(getContext(), searchcasesensitive);
	}

	/**
	 * Set value of SearchCaseSensitive
	 * @param context
	 * @param searchcasesensitive
	 */
	public final void setSearchCaseSensitive(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean searchcasesensitive)
	{
		getMendixObject().setValue(context, MemberNames.SearchCaseSensitive.toString(), searchcasesensitive);
	}

	/**
	 * Set value of UseFormatMicroflow
	 * @param useformatmicroflow
	 */
	public final databasereplication.proxies.YesNo getUseFormatMicroflow()
	{
		return getUseFormatMicroflow(getContext());
	}

	/**
	 * @param context
	 * @return value of UseFormatMicroflow
	 */
	public final databasereplication.proxies.YesNo getUseFormatMicroflow(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.UseFormatMicroflow.toString());
		if (obj == null)
			return null;

		return databasereplication.proxies.YesNo.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of UseFormatMicroflow
	 * @param useformatmicroflow
	 */
	public final void setUseFormatMicroflow(databasereplication.proxies.YesNo useformatmicroflow)
	{
		setUseFormatMicroflow(getContext(), useformatmicroflow);
	}

	/**
	 * Set value of UseFormatMicroflow
	 * @param context
	 * @param useformatmicroflow
	 */
	public final void setUseFormatMicroflow(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.YesNo useformatmicroflow)
	{
		if (useformatmicroflow != null)
			getMendixObject().setValue(context, MemberNames.UseFormatMicroflow.toString(), useformatmicroflow.toString());
		else
			getMendixObject().setValue(context, MemberNames.UseFormatMicroflow.toString(), null);
	}

	/**
	 * @return value of Info_MxMapping
	 */
	public final java.lang.String getInfo_MxMapping()
	{
		return getInfo_MxMapping(getContext());
	}

	/**
	 * @param context
	 * @return value of Info_MxMapping
	 */
	public final java.lang.String getInfo_MxMapping(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Info_MxMapping.toString());
	}

	/**
	 * Set value of Info_MxMapping
	 * @param info_mxmapping
	 */
	public final void setInfo_MxMapping(java.lang.String info_mxmapping)
	{
		setInfo_MxMapping(getContext(), info_mxmapping);
	}

	/**
	 * Set value of Info_MxMapping
	 * @param context
	 * @param info_mxmapping
	 */
	public final void setInfo_MxMapping(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String info_mxmapping)
	{
		getMendixObject().setValue(context, MemberNames.Info_MxMapping.toString(), info_mxmapping);
	}

	/**
	 * @return value of Info_DbMapping
	 */
	public final java.lang.String getInfo_DbMapping()
	{
		return getInfo_DbMapping(getContext());
	}

	/**
	 * @param context
	 * @return value of Info_DbMapping
	 */
	public final java.lang.String getInfo_DbMapping(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Info_DbMapping.toString());
	}

	/**
	 * Set value of Info_DbMapping
	 * @param info_dbmapping
	 */
	public final void setInfo_DbMapping(java.lang.String info_dbmapping)
	{
		setInfo_DbMapping(getContext(), info_dbmapping);
	}

	/**
	 * Set value of Info_DbMapping
	 * @param context
	 * @param info_dbmapping
	 */
	public final void setInfo_DbMapping(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String info_dbmapping)
	{
		getMendixObject().setValue(context, MemberNames.Info_DbMapping.toString(), info_dbmapping);
	}

	/**
	 * @return value of FindAttribute
	 */
	public final java.lang.String getFindAttribute()
	{
		return getFindAttribute(getContext());
	}

	/**
	 * @param context
	 * @return value of FindAttribute
	 */
	public final java.lang.String getFindAttribute(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FindAttribute.toString());
	}

	/**
	 * Set value of FindAttribute
	 * @param findattribute
	 */
	public final void setFindAttribute(java.lang.String findattribute)
	{
		setFindAttribute(getContext(), findattribute);
	}

	/**
	 * Set value of FindAttribute
	 * @param context
	 * @param findattribute
	 */
	public final void setFindAttribute(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String findattribute)
	{
		getMendixObject().setValue(context, MemberNames.FindAttribute.toString(), findattribute);
	}

	/**
	 * @return value of FindReference
	 */
	public final java.lang.String getFindReference()
	{
		return getFindReference(getContext());
	}

	/**
	 * @param context
	 * @return value of FindReference
	 */
	public final java.lang.String getFindReference(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FindReference.toString());
	}

	/**
	 * Set value of FindReference
	 * @param findreference
	 */
	public final void setFindReference(java.lang.String findreference)
	{
		setFindReference(getContext(), findreference);
	}

	/**
	 * Set value of FindReference
	 * @param context
	 * @param findreference
	 */
	public final void setFindReference(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String findreference)
	{
		getMendixObject().setValue(context, MemberNames.FindReference.toString(), findreference);
	}

	/**
	 * @return value of FindObjectType
	 */
	public final java.lang.String getFindObjectType()
	{
		return getFindObjectType(getContext());
	}

	/**
	 * @param context
	 * @return value of FindObjectType
	 */
	public final java.lang.String getFindObjectType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FindObjectType.toString());
	}

	/**
	 * Set value of FindObjectType
	 * @param findobjecttype
	 */
	public final void setFindObjectType(java.lang.String findobjecttype)
	{
		setFindObjectType(getContext(), findobjecttype);
	}

	/**
	 * Set value of FindObjectType
	 * @param context
	 * @param findobjecttype
	 */
	public final void setFindObjectType(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String findobjecttype)
	{
		getMendixObject().setValue(context, MemberNames.FindObjectType.toString(), findobjecttype);
	}

	/**
	 * Set value of FormLayout_TableSelected
	 * @param formlayout_tableselected
	 */
	public final databasereplication.proxies.YesNo getFormLayout_TableSelected()
	{
		return getFormLayout_TableSelected(getContext());
	}

	/**
	 * @param context
	 * @return value of FormLayout_TableSelected
	 */
	public final databasereplication.proxies.YesNo getFormLayout_TableSelected(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.FormLayout_TableSelected.toString());
		if (obj == null)
			return null;

		return databasereplication.proxies.YesNo.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of FormLayout_TableSelected
	 * @param formlayout_tableselected
	 */
	public final void setFormLayout_TableSelected(databasereplication.proxies.YesNo formlayout_tableselected)
	{
		setFormLayout_TableSelected(getContext(), formlayout_tableselected);
	}

	/**
	 * Set value of FormLayout_TableSelected
	 * @param context
	 * @param formlayout_tableselected
	 */
	public final void setFormLayout_TableSelected(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.YesNo formlayout_tableselected)
	{
		if (formlayout_tableselected != null)
			getMendixObject().setValue(context, MemberNames.FormLayout_TableSelected.toString(), formlayout_tableselected.toString());
		else
			getMendixObject().setValue(context, MemberNames.FormLayout_TableSelected.toString(), null);
	}

	/**
	 * Set value of IsValid
	 * @param isvalid
	 */
	public final databasereplication.proxies.YesNo getIsValid()
	{
		return getIsValid(getContext());
	}

	/**
	 * @param context
	 * @return value of IsValid
	 */
	public final databasereplication.proxies.YesNo getIsValid(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.IsValid.toString());
		if (obj == null)
			return null;

		return databasereplication.proxies.YesNo.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of IsValid
	 * @param isvalid
	 */
	public final void setIsValid(databasereplication.proxies.YesNo isvalid)
	{
		setIsValid(getContext(), isvalid);
	}

	/**
	 * Set value of IsValid
	 * @param context
	 * @param isvalid
	 */
	public final void setIsValid(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.YesNo isvalid)
	{
		if (isvalid != null)
			getMendixObject().setValue(context, MemberNames.IsValid.toString(), isvalid.toString());
		else
			getMendixObject().setValue(context, MemberNames.IsValid.toString(), null);
	}

	/**
	 * @return value of IsStored
	 */
	public final java.lang.Integer getIsStored()
	{
		return getIsStored(getContext());
	}

	/**
	 * @param context
	 * @return value of IsStored
	 */
	public final java.lang.Integer getIsStored(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.IsStored.toString());
	}

	/**
	 * Set value of IsStored
	 * @param isstored
	 */
	public final void setIsStored(java.lang.Integer isstored)
	{
		setIsStored(getContext(), isstored);
	}

	/**
	 * Set value of IsStored
	 * @param context
	 * @param isstored
	 */
	public final void setIsStored(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer isstored)
	{
		getMendixObject().setValue(context, MemberNames.IsStored.toString(), isstored);
	}

	/**
	 * Set value of IsAssociationKey
	 * @param isassociationkey
	 */
	public final databasereplication.proxies.AssociationKeyOption getIsAssociationKey()
	{
		return getIsAssociationKey(getContext());
	}

	/**
	 * @param context
	 * @return value of IsAssociationKey
	 */
	public final databasereplication.proxies.AssociationKeyOption getIsAssociationKey(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.IsAssociationKey.toString());
		if (obj == null)
			return null;

		return databasereplication.proxies.AssociationKeyOption.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of IsAssociationKey
	 * @param isassociationkey
	 */
	public final void setIsAssociationKey(databasereplication.proxies.AssociationKeyOption isassociationkey)
	{
		setIsAssociationKey(getContext(), isassociationkey);
	}

	/**
	 * Set value of IsAssociationKey
	 * @param context
	 * @param isassociationkey
	 */
	public final void setIsAssociationKey(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.AssociationKeyOption isassociationkey)
	{
		if (isassociationkey != null)
			getMendixObject().setValue(context, MemberNames.IsAssociationKey.toString(), isassociationkey.toString());
		else
			getMendixObject().setValue(context, MemberNames.IsAssociationKey.toString(), null);
	}

	/**
	 * @return value of ShowSelectStatement
	 */
	public final java.lang.Boolean getShowSelectStatement()
	{
		return getShowSelectStatement(getContext());
	}

	/**
	 * @param context
	 * @return value of ShowSelectStatement
	 */
	public final java.lang.Boolean getShowSelectStatement(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ShowSelectStatement.toString());
	}

	/**
	 * Set value of ShowSelectStatement
	 * @param showselectstatement
	 */
	public final void setShowSelectStatement(java.lang.Boolean showselectstatement)
	{
		setShowSelectStatement(getContext(), showselectstatement);
	}

	/**
	 * Set value of ShowSelectStatement
	 * @param context
	 * @param showselectstatement
	 */
	public final void setShowSelectStatement(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean showselectstatement)
	{
		getMendixObject().setValue(context, MemberNames.ShowSelectStatement.toString(), showselectstatement);
	}

	/**
	 * @return value of ShowCustomQuery
	 */
	public final java.lang.Boolean getShowCustomQuery()
	{
		return getShowCustomQuery(getContext());
	}

	/**
	 * @param context
	 * @return value of ShowCustomQuery
	 */
	public final java.lang.Boolean getShowCustomQuery(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ShowCustomQuery.toString());
	}

	/**
	 * Set value of ShowCustomQuery
	 * @param showcustomquery
	 */
	public final void setShowCustomQuery(java.lang.Boolean showcustomquery)
	{
		setShowCustomQuery(getContext(), showcustomquery);
	}

	/**
	 * Set value of ShowCustomQuery
	 * @param context
	 * @param showcustomquery
	 */
	public final void setShowCustomQuery(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean showcustomquery)
	{
		getMendixObject().setValue(context, MemberNames.ShowCustomQuery.toString(), showcustomquery);
	}

	/**
	 * @return value of ColumnMapping_Column
	 */
	public final databasereplication.proxies.Column getColumnMapping_Column() throws com.mendix.core.CoreException
	{
		return getColumnMapping_Column(getContext());
	}

	/**
	 * @param context
	 * @return value of ColumnMapping_Column
	 */
	public final databasereplication.proxies.Column getColumnMapping_Column(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.Column result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ColumnMapping_Column.toString());
		if (identifier != null)
			result = databasereplication.proxies.Column.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ColumnMapping_Column
	 * @param columnmapping_column
	 */
	public final void setColumnMapping_Column(databasereplication.proxies.Column columnmapping_column)
	{
		setColumnMapping_Column(getContext(), columnmapping_column);
	}

	/**
	 * Set value of ColumnMapping_Column
	 * @param context
	 * @param columnmapping_column
	 */
	public final void setColumnMapping_Column(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.Column columnmapping_column)
	{
		if (columnmapping_column == null)
			getMendixObject().setValue(context, MemberNames.ColumnMapping_Column.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ColumnMapping_Column.toString(), columnmapping_column.getMendixObject().getId());
	}

	/**
	 * @return value of ColumnMapping_TableMapping
	 */
	public final databasereplication.proxies.TableMapping getColumnMapping_TableMapping() throws com.mendix.core.CoreException
	{
		return getColumnMapping_TableMapping(getContext());
	}

	/**
	 * @param context
	 * @return value of ColumnMapping_TableMapping
	 */
	public final databasereplication.proxies.TableMapping getColumnMapping_TableMapping(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.TableMapping result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ColumnMapping_TableMapping.toString());
		if (identifier != null)
			result = databasereplication.proxies.TableMapping.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ColumnMapping_TableMapping
	 * @param columnmapping_tablemapping
	 */
	public final void setColumnMapping_TableMapping(databasereplication.proxies.TableMapping columnmapping_tablemapping)
	{
		setColumnMapping_TableMapping(getContext(), columnmapping_tablemapping);
	}

	/**
	 * Set value of ColumnMapping_TableMapping
	 * @param context
	 * @param columnmapping_tablemapping
	 */
	public final void setColumnMapping_TableMapping(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.TableMapping columnmapping_tablemapping)
	{
		if (columnmapping_tablemapping == null)
			getMendixObject().setValue(context, MemberNames.ColumnMapping_TableMapping.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ColumnMapping_TableMapping.toString(), columnmapping_tablemapping.getMendixObject().getId());
	}

	/**
	 * @return value of ColumnMapping_AdditionalJoins
	 */
	public final databasereplication.proxies.AdditionalJoins getColumnMapping_AdditionalJoins() throws com.mendix.core.CoreException
	{
		return getColumnMapping_AdditionalJoins(getContext());
	}

	/**
	 * @param context
	 * @return value of ColumnMapping_AdditionalJoins
	 */
	public final databasereplication.proxies.AdditionalJoins getColumnMapping_AdditionalJoins(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.AdditionalJoins result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ColumnMapping_AdditionalJoins.toString());
		if (identifier != null)
			result = databasereplication.proxies.AdditionalJoins.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ColumnMapping_AdditionalJoins
	 * @param columnmapping_additionaljoins
	 */
	public final void setColumnMapping_AdditionalJoins(databasereplication.proxies.AdditionalJoins columnmapping_additionaljoins)
	{
		setColumnMapping_AdditionalJoins(getContext(), columnmapping_additionaljoins);
	}

	/**
	 * Set value of ColumnMapping_AdditionalJoins
	 * @param context
	 * @param columnmapping_additionaljoins
	 */
	public final void setColumnMapping_AdditionalJoins(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.AdditionalJoins columnmapping_additionaljoins)
	{
		if (columnmapping_additionaljoins == null)
			getMendixObject().setValue(context, MemberNames.ColumnMapping_AdditionalJoins.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ColumnMapping_AdditionalJoins.toString(), columnmapping_additionaljoins.getMendixObject().getId());
	}

	/**
	 * @return value of ColumnMapping_ColumnTemp
	 */
	public final databasereplication.proxies.ColumnTemp getColumnMapping_ColumnTemp() throws com.mendix.core.CoreException
	{
		return getColumnMapping_ColumnTemp(getContext());
	}

	/**
	 * @param context
	 * @return value of ColumnMapping_ColumnTemp
	 */
	public final databasereplication.proxies.ColumnTemp getColumnMapping_ColumnTemp(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.ColumnTemp result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ColumnMapping_ColumnTemp.toString());
		if (identifier != null)
			result = databasereplication.proxies.ColumnTemp.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ColumnMapping_ColumnTemp
	 * @param columnmapping_columntemp
	 */
	public final void setColumnMapping_ColumnTemp(databasereplication.proxies.ColumnTemp columnmapping_columntemp)
	{
		setColumnMapping_ColumnTemp(getContext(), columnmapping_columntemp);
	}

	/**
	 * Set value of ColumnMapping_ColumnTemp
	 * @param context
	 * @param columnmapping_columntemp
	 */
	public final void setColumnMapping_ColumnTemp(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.ColumnTemp columnmapping_columntemp)
	{
		if (columnmapping_columntemp == null)
			getMendixObject().setValue(context, MemberNames.ColumnMapping_ColumnTemp.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ColumnMapping_ColumnTemp.toString(), columnmapping_columntemp.getMendixObject().getId());
	}

	/**
	 * @return value of ColumnMapping_AdditionalJoinTemp
	 */
	public final databasereplication.proxies.AdditionalJoinTemp getColumnMapping_AdditionalJoinTemp() throws com.mendix.core.CoreException
	{
		return getColumnMapping_AdditionalJoinTemp(getContext());
	}

	/**
	 * @param context
	 * @return value of ColumnMapping_AdditionalJoinTemp
	 */
	public final databasereplication.proxies.AdditionalJoinTemp getColumnMapping_AdditionalJoinTemp(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.AdditionalJoinTemp result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ColumnMapping_AdditionalJoinTemp.toString());
		if (identifier != null)
			result = databasereplication.proxies.AdditionalJoinTemp.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ColumnMapping_AdditionalJoinTemp
	 * @param columnmapping_additionaljointemp
	 */
	public final void setColumnMapping_AdditionalJoinTemp(databasereplication.proxies.AdditionalJoinTemp columnmapping_additionaljointemp)
	{
		setColumnMapping_AdditionalJoinTemp(getContext(), columnmapping_additionaljointemp);
	}

	/**
	 * Set value of ColumnMapping_AdditionalJoinTemp
	 * @param context
	 * @param columnmapping_additionaljointemp
	 */
	public final void setColumnMapping_AdditionalJoinTemp(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.AdditionalJoinTemp columnmapping_additionaljointemp)
	{
		if (columnmapping_additionaljointemp == null)
			getMendixObject().setValue(context, MemberNames.ColumnMapping_AdditionalJoinTemp.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ColumnMapping_AdditionalJoinTemp.toString(), columnmapping_additionaljointemp.getMendixObject().getId());
	}

	/**
	 * @return value of ColumnMapping_MxObjectReferenceTemp
	 */
	public final databasereplication.proxies.MxObjectReferenceTemp getColumnMapping_MxObjectReferenceTemp() throws com.mendix.core.CoreException
	{
		return getColumnMapping_MxObjectReferenceTemp(getContext());
	}

	/**
	 * @param context
	 * @return value of ColumnMapping_MxObjectReferenceTemp
	 */
	public final databasereplication.proxies.MxObjectReferenceTemp getColumnMapping_MxObjectReferenceTemp(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.MxObjectReferenceTemp result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ColumnMapping_MxObjectReferenceTemp.toString());
		if (identifier != null)
			result = databasereplication.proxies.MxObjectReferenceTemp.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ColumnMapping_MxObjectReferenceTemp
	 * @param columnmapping_mxobjectreferencetemp
	 */
	public final void setColumnMapping_MxObjectReferenceTemp(databasereplication.proxies.MxObjectReferenceTemp columnmapping_mxobjectreferencetemp)
	{
		setColumnMapping_MxObjectReferenceTemp(getContext(), columnmapping_mxobjectreferencetemp);
	}

	/**
	 * Set value of ColumnMapping_MxObjectReferenceTemp
	 * @param context
	 * @param columnmapping_mxobjectreferencetemp
	 */
	public final void setColumnMapping_MxObjectReferenceTemp(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.MxObjectReferenceTemp columnmapping_mxobjectreferencetemp)
	{
		if (columnmapping_mxobjectreferencetemp == null)
			getMendixObject().setValue(context, MemberNames.ColumnMapping_MxObjectReferenceTemp.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ColumnMapping_MxObjectReferenceTemp.toString(), columnmapping_mxobjectreferencetemp.getMendixObject().getId());
	}

	/**
	 * @return value of ColumnMapping_MxObjectMember
	 */
	public final mxmodelreflection.proxies.MxObjectMember getColumnMapping_MxObjectMember() throws com.mendix.core.CoreException
	{
		return getColumnMapping_MxObjectMember(getContext());
	}

	/**
	 * @param context
	 * @return value of ColumnMapping_MxObjectMember
	 */
	public final mxmodelreflection.proxies.MxObjectMember getColumnMapping_MxObjectMember(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		mxmodelreflection.proxies.MxObjectMember result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ColumnMapping_MxObjectMember.toString());
		if (identifier != null)
			result = mxmodelreflection.proxies.MxObjectMember.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ColumnMapping_MxObjectMember
	 * @param columnmapping_mxobjectmember
	 */
	public final void setColumnMapping_MxObjectMember(mxmodelreflection.proxies.MxObjectMember columnmapping_mxobjectmember)
	{
		setColumnMapping_MxObjectMember(getContext(), columnmapping_mxobjectmember);
	}

	/**
	 * Set value of ColumnMapping_MxObjectMember
	 * @param context
	 * @param columnmapping_mxobjectmember
	 */
	public final void setColumnMapping_MxObjectMember(com.mendix.systemwideinterfaces.core.IContext context, mxmodelreflection.proxies.MxObjectMember columnmapping_mxobjectmember)
	{
		if (columnmapping_mxobjectmember == null)
			getMendixObject().setValue(context, MemberNames.ColumnMapping_MxObjectMember.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ColumnMapping_MxObjectMember.toString(), columnmapping_mxobjectmember.getMendixObject().getId());
	}

	/**
	 * @return value of ColumnMapping_Microflows
	 */
	public final mxmodelreflection.proxies.Microflows getColumnMapping_Microflows() throws com.mendix.core.CoreException
	{
		return getColumnMapping_Microflows(getContext());
	}

	/**
	 * @param context
	 * @return value of ColumnMapping_Microflows
	 */
	public final mxmodelreflection.proxies.Microflows getColumnMapping_Microflows(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		mxmodelreflection.proxies.Microflows result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ColumnMapping_Microflows.toString());
		if (identifier != null)
			result = mxmodelreflection.proxies.Microflows.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ColumnMapping_Microflows
	 * @param columnmapping_microflows
	 */
	public final void setColumnMapping_Microflows(mxmodelreflection.proxies.Microflows columnmapping_microflows)
	{
		setColumnMapping_Microflows(getContext(), columnmapping_microflows);
	}

	/**
	 * Set value of ColumnMapping_Microflows
	 * @param context
	 * @param columnmapping_microflows
	 */
	public final void setColumnMapping_Microflows(com.mendix.systemwideinterfaces.core.IContext context, mxmodelreflection.proxies.Microflows columnmapping_microflows)
	{
		if (columnmapping_microflows == null)
			getMendixObject().setValue(context, MemberNames.ColumnMapping_Microflows.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ColumnMapping_Microflows.toString(), columnmapping_microflows.getMendixObject().getId());
	}

	/**
	 * @return value of ColumnMapping_MxObjectReference
	 */
	public final mxmodelreflection.proxies.MxObjectReference getColumnMapping_MxObjectReference() throws com.mendix.core.CoreException
	{
		return getColumnMapping_MxObjectReference(getContext());
	}

	/**
	 * @param context
	 * @return value of ColumnMapping_MxObjectReference
	 */
	public final mxmodelreflection.proxies.MxObjectReference getColumnMapping_MxObjectReference(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		mxmodelreflection.proxies.MxObjectReference result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ColumnMapping_MxObjectReference.toString());
		if (identifier != null)
			result = mxmodelreflection.proxies.MxObjectReference.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ColumnMapping_MxObjectReference
	 * @param columnmapping_mxobjectreference
	 */
	public final void setColumnMapping_MxObjectReference(mxmodelreflection.proxies.MxObjectReference columnmapping_mxobjectreference)
	{
		setColumnMapping_MxObjectReference(getContext(), columnmapping_mxobjectreference);
	}

	/**
	 * Set value of ColumnMapping_MxObjectReference
	 * @param context
	 * @param columnmapping_mxobjectreference
	 */
	public final void setColumnMapping_MxObjectReference(com.mendix.systemwideinterfaces.core.IContext context, mxmodelreflection.proxies.MxObjectReference columnmapping_mxobjectreference)
	{
		if (columnmapping_mxobjectreference == null)
			getMendixObject().setValue(context, MemberNames.ColumnMapping_MxObjectReference.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ColumnMapping_MxObjectReference.toString(), columnmapping_mxobjectreference.getMendixObject().getId());
	}

	/**
	 * @return value of ColumnMapping_MxObjectType
	 */
	public final mxmodelreflection.proxies.MxObjectType getColumnMapping_MxObjectType() throws com.mendix.core.CoreException
	{
		return getColumnMapping_MxObjectType(getContext());
	}

	/**
	 * @param context
	 * @return value of ColumnMapping_MxObjectType
	 */
	public final mxmodelreflection.proxies.MxObjectType getColumnMapping_MxObjectType(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		mxmodelreflection.proxies.MxObjectType result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ColumnMapping_MxObjectType.toString());
		if (identifier != null)
			result = mxmodelreflection.proxies.MxObjectType.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ColumnMapping_MxObjectType
	 * @param columnmapping_mxobjecttype
	 */
	public final void setColumnMapping_MxObjectType(mxmodelreflection.proxies.MxObjectType columnmapping_mxobjecttype)
	{
		setColumnMapping_MxObjectType(getContext(), columnmapping_mxobjecttype);
	}

	/**
	 * Set value of ColumnMapping_MxObjectType
	 * @param context
	 * @param columnmapping_mxobjecttype
	 */
	public final void setColumnMapping_MxObjectType(com.mendix.systemwideinterfaces.core.IContext context, mxmodelreflection.proxies.MxObjectType columnmapping_mxobjecttype)
	{
		if (columnmapping_mxobjecttype == null)
			getMendixObject().setValue(context, MemberNames.ColumnMapping_MxObjectType.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ColumnMapping_MxObjectType.toString(), columnmapping_mxobjecttype.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return columnMappingMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final databasereplication.proxies.ColumnMapping that = (databasereplication.proxies.ColumnMapping) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DatabaseReplication.ColumnMapping";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
