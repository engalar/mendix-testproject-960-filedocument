// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package databasereplication.proxies;

public class Constraint
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject constraintMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DatabaseReplication.Constraint";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Operator("Operator"),
		IsStored("IsStored"),
		Constraint_AdditionalJoins("DatabaseReplication.Constraint_AdditionalJoins"),
		Constraint_Column_Left("DatabaseReplication.Constraint_Column_Left"),
		Constraint_Column_Right("DatabaseReplication.Constraint_Column_Right"),
		Constraint_Table_Left("DatabaseReplication.Constraint_Table_Left"),
		Constraint_ColumnTemp_Right("DatabaseReplication.Constraint_ColumnTemp_Right"),
		Constraint_ColumnTemp_Left("DatabaseReplication.Constraint_ColumnTemp_Left"),
		Constraint_AdditionalJoins_Left("DatabaseReplication.Constraint_AdditionalJoins_Left"),
		Constraint_AdditionalJoinTemp_Left("DatabaseReplication.Constraint_AdditionalJoinTemp_Left");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Constraint(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DatabaseReplication.Constraint"));
	}

	protected Constraint(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject constraintMendixObject)
	{
		if (constraintMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("DatabaseReplication.Constraint", constraintMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DatabaseReplication.Constraint");

		this.constraintMendixObject = constraintMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Constraint.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static databasereplication.proxies.Constraint initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return databasereplication.proxies.Constraint.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static databasereplication.proxies.Constraint initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new databasereplication.proxies.Constraint(context, mendixObject);
	}

	public static databasereplication.proxies.Constraint load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return databasereplication.proxies.Constraint.initialize(context, mendixObject);
	}

	public static java.util.List<databasereplication.proxies.Constraint> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<databasereplication.proxies.Constraint> result = new java.util.ArrayList<databasereplication.proxies.Constraint>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//DatabaseReplication.Constraint" + xpathConstraint))
			result.add(databasereplication.proxies.Constraint.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of Operator
	 * @param operator
	 */
	public final databasereplication.proxies.Operator getOperator()
	{
		return getOperator(getContext());
	}

	/**
	 * @param context
	 * @return value of Operator
	 */
	public final databasereplication.proxies.Operator getOperator(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Operator.toString());
		if (obj == null)
			return null;

		return databasereplication.proxies.Operator.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Operator
	 * @param operator
	 */
	public final void setOperator(databasereplication.proxies.Operator operator)
	{
		setOperator(getContext(), operator);
	}

	/**
	 * Set value of Operator
	 * @param context
	 * @param operator
	 */
	public final void setOperator(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.Operator operator)
	{
		if (operator != null)
			getMendixObject().setValue(context, MemberNames.Operator.toString(), operator.toString());
		else
			getMendixObject().setValue(context, MemberNames.Operator.toString(), null);
	}

	/**
	 * @return value of IsStored
	 */
	public final java.lang.Integer getIsStored()
	{
		return getIsStored(getContext());
	}

	/**
	 * @param context
	 * @return value of IsStored
	 */
	public final java.lang.Integer getIsStored(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.IsStored.toString());
	}

	/**
	 * Set value of IsStored
	 * @param isstored
	 */
	public final void setIsStored(java.lang.Integer isstored)
	{
		setIsStored(getContext(), isstored);
	}

	/**
	 * Set value of IsStored
	 * @param context
	 * @param isstored
	 */
	public final void setIsStored(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer isstored)
	{
		getMendixObject().setValue(context, MemberNames.IsStored.toString(), isstored);
	}

	/**
	 * @return value of Constraint_AdditionalJoins
	 */
	public final databasereplication.proxies.AdditionalJoins getConstraint_AdditionalJoins() throws com.mendix.core.CoreException
	{
		return getConstraint_AdditionalJoins(getContext());
	}

	/**
	 * @param context
	 * @return value of Constraint_AdditionalJoins
	 */
	public final databasereplication.proxies.AdditionalJoins getConstraint_AdditionalJoins(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.AdditionalJoins result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Constraint_AdditionalJoins.toString());
		if (identifier != null)
			result = databasereplication.proxies.AdditionalJoins.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Constraint_AdditionalJoins
	 * @param constraint_additionaljoins
	 */
	public final void setConstraint_AdditionalJoins(databasereplication.proxies.AdditionalJoins constraint_additionaljoins)
	{
		setConstraint_AdditionalJoins(getContext(), constraint_additionaljoins);
	}

	/**
	 * Set value of Constraint_AdditionalJoins
	 * @param context
	 * @param constraint_additionaljoins
	 */
	public final void setConstraint_AdditionalJoins(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.AdditionalJoins constraint_additionaljoins)
	{
		if (constraint_additionaljoins == null)
			getMendixObject().setValue(context, MemberNames.Constraint_AdditionalJoins.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Constraint_AdditionalJoins.toString(), constraint_additionaljoins.getMendixObject().getId());
	}

	/**
	 * @return value of Constraint_Column_Left
	 */
	public final databasereplication.proxies.Column getConstraint_Column_Left() throws com.mendix.core.CoreException
	{
		return getConstraint_Column_Left(getContext());
	}

	/**
	 * @param context
	 * @return value of Constraint_Column_Left
	 */
	public final databasereplication.proxies.Column getConstraint_Column_Left(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.Column result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Constraint_Column_Left.toString());
		if (identifier != null)
			result = databasereplication.proxies.Column.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Constraint_Column_Left
	 * @param constraint_column_left
	 */
	public final void setConstraint_Column_Left(databasereplication.proxies.Column constraint_column_left)
	{
		setConstraint_Column_Left(getContext(), constraint_column_left);
	}

	/**
	 * Set value of Constraint_Column_Left
	 * @param context
	 * @param constraint_column_left
	 */
	public final void setConstraint_Column_Left(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.Column constraint_column_left)
	{
		if (constraint_column_left == null)
			getMendixObject().setValue(context, MemberNames.Constraint_Column_Left.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Constraint_Column_Left.toString(), constraint_column_left.getMendixObject().getId());
	}

	/**
	 * @return value of Constraint_Column_Right
	 */
	public final databasereplication.proxies.Column getConstraint_Column_Right() throws com.mendix.core.CoreException
	{
		return getConstraint_Column_Right(getContext());
	}

	/**
	 * @param context
	 * @return value of Constraint_Column_Right
	 */
	public final databasereplication.proxies.Column getConstraint_Column_Right(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.Column result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Constraint_Column_Right.toString());
		if (identifier != null)
			result = databasereplication.proxies.Column.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Constraint_Column_Right
	 * @param constraint_column_right
	 */
	public final void setConstraint_Column_Right(databasereplication.proxies.Column constraint_column_right)
	{
		setConstraint_Column_Right(getContext(), constraint_column_right);
	}

	/**
	 * Set value of Constraint_Column_Right
	 * @param context
	 * @param constraint_column_right
	 */
	public final void setConstraint_Column_Right(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.Column constraint_column_right)
	{
		if (constraint_column_right == null)
			getMendixObject().setValue(context, MemberNames.Constraint_Column_Right.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Constraint_Column_Right.toString(), constraint_column_right.getMendixObject().getId());
	}

	/**
	 * @return value of Constraint_Table_Left
	 */
	public final databasereplication.proxies.Table getConstraint_Table_Left() throws com.mendix.core.CoreException
	{
		return getConstraint_Table_Left(getContext());
	}

	/**
	 * @param context
	 * @return value of Constraint_Table_Left
	 */
	public final databasereplication.proxies.Table getConstraint_Table_Left(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.Table result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Constraint_Table_Left.toString());
		if (identifier != null)
			result = databasereplication.proxies.Table.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Constraint_Table_Left
	 * @param constraint_table_left
	 */
	public final void setConstraint_Table_Left(databasereplication.proxies.Table constraint_table_left)
	{
		setConstraint_Table_Left(getContext(), constraint_table_left);
	}

	/**
	 * Set value of Constraint_Table_Left
	 * @param context
	 * @param constraint_table_left
	 */
	public final void setConstraint_Table_Left(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.Table constraint_table_left)
	{
		if (constraint_table_left == null)
			getMendixObject().setValue(context, MemberNames.Constraint_Table_Left.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Constraint_Table_Left.toString(), constraint_table_left.getMendixObject().getId());
	}

	/**
	 * @return value of Constraint_ColumnTemp_Right
	 */
	public final databasereplication.proxies.ColumnTemp getConstraint_ColumnTemp_Right() throws com.mendix.core.CoreException
	{
		return getConstraint_ColumnTemp_Right(getContext());
	}

	/**
	 * @param context
	 * @return value of Constraint_ColumnTemp_Right
	 */
	public final databasereplication.proxies.ColumnTemp getConstraint_ColumnTemp_Right(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.ColumnTemp result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Constraint_ColumnTemp_Right.toString());
		if (identifier != null)
			result = databasereplication.proxies.ColumnTemp.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Constraint_ColumnTemp_Right
	 * @param constraint_columntemp_right
	 */
	public final void setConstraint_ColumnTemp_Right(databasereplication.proxies.ColumnTemp constraint_columntemp_right)
	{
		setConstraint_ColumnTemp_Right(getContext(), constraint_columntemp_right);
	}

	/**
	 * Set value of Constraint_ColumnTemp_Right
	 * @param context
	 * @param constraint_columntemp_right
	 */
	public final void setConstraint_ColumnTemp_Right(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.ColumnTemp constraint_columntemp_right)
	{
		if (constraint_columntemp_right == null)
			getMendixObject().setValue(context, MemberNames.Constraint_ColumnTemp_Right.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Constraint_ColumnTemp_Right.toString(), constraint_columntemp_right.getMendixObject().getId());
	}

	/**
	 * @return value of Constraint_ColumnTemp_Left
	 */
	public final databasereplication.proxies.ColumnTemp getConstraint_ColumnTemp_Left() throws com.mendix.core.CoreException
	{
		return getConstraint_ColumnTemp_Left(getContext());
	}

	/**
	 * @param context
	 * @return value of Constraint_ColumnTemp_Left
	 */
	public final databasereplication.proxies.ColumnTemp getConstraint_ColumnTemp_Left(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.ColumnTemp result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Constraint_ColumnTemp_Left.toString());
		if (identifier != null)
			result = databasereplication.proxies.ColumnTemp.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Constraint_ColumnTemp_Left
	 * @param constraint_columntemp_left
	 */
	public final void setConstraint_ColumnTemp_Left(databasereplication.proxies.ColumnTemp constraint_columntemp_left)
	{
		setConstraint_ColumnTemp_Left(getContext(), constraint_columntemp_left);
	}

	/**
	 * Set value of Constraint_ColumnTemp_Left
	 * @param context
	 * @param constraint_columntemp_left
	 */
	public final void setConstraint_ColumnTemp_Left(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.ColumnTemp constraint_columntemp_left)
	{
		if (constraint_columntemp_left == null)
			getMendixObject().setValue(context, MemberNames.Constraint_ColumnTemp_Left.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Constraint_ColumnTemp_Left.toString(), constraint_columntemp_left.getMendixObject().getId());
	}

	/**
	 * @return value of Constraint_AdditionalJoins_Left
	 */
	public final databasereplication.proxies.AdditionalJoins getConstraint_AdditionalJoins_Left() throws com.mendix.core.CoreException
	{
		return getConstraint_AdditionalJoins_Left(getContext());
	}

	/**
	 * @param context
	 * @return value of Constraint_AdditionalJoins_Left
	 */
	public final databasereplication.proxies.AdditionalJoins getConstraint_AdditionalJoins_Left(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.AdditionalJoins result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Constraint_AdditionalJoins_Left.toString());
		if (identifier != null)
			result = databasereplication.proxies.AdditionalJoins.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Constraint_AdditionalJoins_Left
	 * @param constraint_additionaljoins_left
	 */
	public final void setConstraint_AdditionalJoins_Left(databasereplication.proxies.AdditionalJoins constraint_additionaljoins_left)
	{
		setConstraint_AdditionalJoins_Left(getContext(), constraint_additionaljoins_left);
	}

	/**
	 * Set value of Constraint_AdditionalJoins_Left
	 * @param context
	 * @param constraint_additionaljoins_left
	 */
	public final void setConstraint_AdditionalJoins_Left(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.AdditionalJoins constraint_additionaljoins_left)
	{
		if (constraint_additionaljoins_left == null)
			getMendixObject().setValue(context, MemberNames.Constraint_AdditionalJoins_Left.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Constraint_AdditionalJoins_Left.toString(), constraint_additionaljoins_left.getMendixObject().getId());
	}

	/**
	 * @return value of Constraint_AdditionalJoinTemp_Left
	 */
	public final databasereplication.proxies.AdditionalJoinTemp getConstraint_AdditionalJoinTemp_Left() throws com.mendix.core.CoreException
	{
		return getConstraint_AdditionalJoinTemp_Left(getContext());
	}

	/**
	 * @param context
	 * @return value of Constraint_AdditionalJoinTemp_Left
	 */
	public final databasereplication.proxies.AdditionalJoinTemp getConstraint_AdditionalJoinTemp_Left(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.AdditionalJoinTemp result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Constraint_AdditionalJoinTemp_Left.toString());
		if (identifier != null)
			result = databasereplication.proxies.AdditionalJoinTemp.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Constraint_AdditionalJoinTemp_Left
	 * @param constraint_additionaljointemp_left
	 */
	public final void setConstraint_AdditionalJoinTemp_Left(databasereplication.proxies.AdditionalJoinTemp constraint_additionaljointemp_left)
	{
		setConstraint_AdditionalJoinTemp_Left(getContext(), constraint_additionaljointemp_left);
	}

	/**
	 * Set value of Constraint_AdditionalJoinTemp_Left
	 * @param context
	 * @param constraint_additionaljointemp_left
	 */
	public final void setConstraint_AdditionalJoinTemp_Left(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.AdditionalJoinTemp constraint_additionaljointemp_left)
	{
		if (constraint_additionaljointemp_left == null)
			getMendixObject().setValue(context, MemberNames.Constraint_AdditionalJoinTemp_Left.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Constraint_AdditionalJoinTemp_Left.toString(), constraint_additionaljointemp_left.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return constraintMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final databasereplication.proxies.Constraint that = (databasereplication.proxies.Constraint) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DatabaseReplication.Constraint";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
