// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package databasereplication.proxies;

public class Database
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject databaseMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DatabaseReplication.Database";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		DatabaseType("DatabaseType"),
		DatabaseName("DatabaseName"),
		DatabaseUser("DatabaseUser"),
		DatabasePassword("DatabasePassword"),
		DatabasePassword_Encrypted("DatabasePassword_Encrypted"),
		DatabaseURL("DatabaseURL"),
		Port("Port"),
		ServiceName("ServiceName"),
		DbId("DbId"),
		FullDescription("FullDescription"),
		useIntegratedSecurity("useIntegratedSecurity"),
		Database_CustomConnectionInfo("DatabaseReplication.Database_CustomConnectionInfo"),
		Database_XMLDocumentTM("DatabaseReplication.Database_XMLDocumentTM");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Database(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DatabaseReplication.Database"));
	}

	protected Database(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject databaseMendixObject)
	{
		if (databaseMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("DatabaseReplication.Database", databaseMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DatabaseReplication.Database");

		this.databaseMendixObject = databaseMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Database.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static databasereplication.proxies.Database initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return databasereplication.proxies.Database.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static databasereplication.proxies.Database initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new databasereplication.proxies.Database(context, mendixObject);
	}

	public static databasereplication.proxies.Database load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return databasereplication.proxies.Database.initialize(context, mendixObject);
	}

	public static java.util.List<databasereplication.proxies.Database> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<databasereplication.proxies.Database> result = new java.util.ArrayList<databasereplication.proxies.Database>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//DatabaseReplication.Database" + xpathConstraint))
			result.add(databasereplication.proxies.Database.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of DatabaseType
	 * @param databasetype
	 */
	public final databasereplication.proxies.DBType getDatabaseType()
	{
		return getDatabaseType(getContext());
	}

	/**
	 * @param context
	 * @return value of DatabaseType
	 */
	public final databasereplication.proxies.DBType getDatabaseType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.DatabaseType.toString());
		if (obj == null)
			return null;

		return databasereplication.proxies.DBType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of DatabaseType
	 * @param databasetype
	 */
	public final void setDatabaseType(databasereplication.proxies.DBType databasetype)
	{
		setDatabaseType(getContext(), databasetype);
	}

	/**
	 * Set value of DatabaseType
	 * @param context
	 * @param databasetype
	 */
	public final void setDatabaseType(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.DBType databasetype)
	{
		if (databasetype != null)
			getMendixObject().setValue(context, MemberNames.DatabaseType.toString(), databasetype.toString());
		else
			getMendixObject().setValue(context, MemberNames.DatabaseType.toString(), null);
	}

	/**
	 * @return value of DatabaseName
	 */
	public final java.lang.String getDatabaseName()
	{
		return getDatabaseName(getContext());
	}

	/**
	 * @param context
	 * @return value of DatabaseName
	 */
	public final java.lang.String getDatabaseName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DatabaseName.toString());
	}

	/**
	 * Set value of DatabaseName
	 * @param databasename
	 */
	public final void setDatabaseName(java.lang.String databasename)
	{
		setDatabaseName(getContext(), databasename);
	}

	/**
	 * Set value of DatabaseName
	 * @param context
	 * @param databasename
	 */
	public final void setDatabaseName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String databasename)
	{
		getMendixObject().setValue(context, MemberNames.DatabaseName.toString(), databasename);
	}

	/**
	 * @return value of DatabaseUser
	 */
	public final java.lang.String getDatabaseUser()
	{
		return getDatabaseUser(getContext());
	}

	/**
	 * @param context
	 * @return value of DatabaseUser
	 */
	public final java.lang.String getDatabaseUser(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DatabaseUser.toString());
	}

	/**
	 * Set value of DatabaseUser
	 * @param databaseuser
	 */
	public final void setDatabaseUser(java.lang.String databaseuser)
	{
		setDatabaseUser(getContext(), databaseuser);
	}

	/**
	 * Set value of DatabaseUser
	 * @param context
	 * @param databaseuser
	 */
	public final void setDatabaseUser(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String databaseuser)
	{
		getMendixObject().setValue(context, MemberNames.DatabaseUser.toString(), databaseuser);
	}

	/**
	 * @return value of DatabasePassword
	 */
	public final java.lang.String getDatabasePassword()
	{
		return getDatabasePassword(getContext());
	}

	/**
	 * @param context
	 * @return value of DatabasePassword
	 */
	public final java.lang.String getDatabasePassword(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DatabasePassword.toString());
	}

	/**
	 * Set value of DatabasePassword
	 * @param databasepassword
	 */
	public final void setDatabasePassword(java.lang.String databasepassword)
	{
		setDatabasePassword(getContext(), databasepassword);
	}

	/**
	 * Set value of DatabasePassword
	 * @param context
	 * @param databasepassword
	 */
	public final void setDatabasePassword(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String databasepassword)
	{
		getMendixObject().setValue(context, MemberNames.DatabasePassword.toString(), databasepassword);
	}

	/**
	 * @return value of DatabasePassword_Encrypted
	 */
	public final java.lang.String getDatabasePassword_Encrypted()
	{
		return getDatabasePassword_Encrypted(getContext());
	}

	/**
	 * @param context
	 * @return value of DatabasePassword_Encrypted
	 */
	public final java.lang.String getDatabasePassword_Encrypted(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DatabasePassword_Encrypted.toString());
	}

	/**
	 * Set value of DatabasePassword_Encrypted
	 * @param databasepassword_encrypted
	 */
	public final void setDatabasePassword_Encrypted(java.lang.String databasepassword_encrypted)
	{
		setDatabasePassword_Encrypted(getContext(), databasepassword_encrypted);
	}

	/**
	 * Set value of DatabasePassword_Encrypted
	 * @param context
	 * @param databasepassword_encrypted
	 */
	public final void setDatabasePassword_Encrypted(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String databasepassword_encrypted)
	{
		getMendixObject().setValue(context, MemberNames.DatabasePassword_Encrypted.toString(), databasepassword_encrypted);
	}

	/**
	 * @return value of DatabaseURL
	 */
	public final java.lang.String getDatabaseURL()
	{
		return getDatabaseURL(getContext());
	}

	/**
	 * @param context
	 * @return value of DatabaseURL
	 */
	public final java.lang.String getDatabaseURL(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DatabaseURL.toString());
	}

	/**
	 * Set value of DatabaseURL
	 * @param databaseurl
	 */
	public final void setDatabaseURL(java.lang.String databaseurl)
	{
		setDatabaseURL(getContext(), databaseurl);
	}

	/**
	 * Set value of DatabaseURL
	 * @param context
	 * @param databaseurl
	 */
	public final void setDatabaseURL(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String databaseurl)
	{
		getMendixObject().setValue(context, MemberNames.DatabaseURL.toString(), databaseurl);
	}

	/**
	 * @return value of Port
	 */
	public final java.lang.Integer getPort()
	{
		return getPort(getContext());
	}

	/**
	 * @param context
	 * @return value of Port
	 */
	public final java.lang.Integer getPort(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Port.toString());
	}

	/**
	 * Set value of Port
	 * @param port
	 */
	public final void setPort(java.lang.Integer port)
	{
		setPort(getContext(), port);
	}

	/**
	 * Set value of Port
	 * @param context
	 * @param port
	 */
	public final void setPort(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer port)
	{
		getMendixObject().setValue(context, MemberNames.Port.toString(), port);
	}

	/**
	 * @return value of ServiceName
	 */
	public final java.lang.String getServiceName()
	{
		return getServiceName(getContext());
	}

	/**
	 * @param context
	 * @return value of ServiceName
	 */
	public final java.lang.String getServiceName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ServiceName.toString());
	}

	/**
	 * Set value of ServiceName
	 * @param servicename
	 */
	public final void setServiceName(java.lang.String servicename)
	{
		setServiceName(getContext(), servicename);
	}

	/**
	 * Set value of ServiceName
	 * @param context
	 * @param servicename
	 */
	public final void setServiceName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String servicename)
	{
		getMendixObject().setValue(context, MemberNames.ServiceName.toString(), servicename);
	}

	/**
	 * @return value of DbId
	 */
	public final java.lang.Long getDbId()
	{
		return getDbId(getContext());
	}

	/**
	 * @param context
	 * @return value of DbId
	 */
	public final java.lang.Long getDbId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.DbId.toString());
	}

	/**
	 * Set value of DbId
	 * @param dbid
	 */
	public final void setDbId(java.lang.Long dbid)
	{
		setDbId(getContext(), dbid);
	}

	/**
	 * Set value of DbId
	 * @param context
	 * @param dbid
	 */
	public final void setDbId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long dbid)
	{
		getMendixObject().setValue(context, MemberNames.DbId.toString(), dbid);
	}

	/**
	 * @return value of FullDescription
	 */
	public final java.lang.String getFullDescription()
	{
		return getFullDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of FullDescription
	 */
	public final java.lang.String getFullDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FullDescription.toString());
	}

	/**
	 * Set value of FullDescription
	 * @param fulldescription
	 */
	public final void setFullDescription(java.lang.String fulldescription)
	{
		setFullDescription(getContext(), fulldescription);
	}

	/**
	 * Set value of FullDescription
	 * @param context
	 * @param fulldescription
	 */
	public final void setFullDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String fulldescription)
	{
		getMendixObject().setValue(context, MemberNames.FullDescription.toString(), fulldescription);
	}

	/**
	 * @return value of useIntegratedSecurity
	 */
	public final java.lang.Boolean getuseIntegratedSecurity()
	{
		return getuseIntegratedSecurity(getContext());
	}

	/**
	 * @param context
	 * @return value of useIntegratedSecurity
	 */
	public final java.lang.Boolean getuseIntegratedSecurity(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.useIntegratedSecurity.toString());
	}

	/**
	 * Set value of useIntegratedSecurity
	 * @param useintegratedsecurity
	 */
	public final void setuseIntegratedSecurity(java.lang.Boolean useintegratedsecurity)
	{
		setuseIntegratedSecurity(getContext(), useintegratedsecurity);
	}

	/**
	 * Set value of useIntegratedSecurity
	 * @param context
	 * @param useintegratedsecurity
	 */
	public final void setuseIntegratedSecurity(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean useintegratedsecurity)
	{
		getMendixObject().setValue(context, MemberNames.useIntegratedSecurity.toString(), useintegratedsecurity);
	}

	/**
	 * @return value of Database_CustomConnectionInfo
	 */
	public final databasereplication.proxies.CustomConnectionInfo getDatabase_CustomConnectionInfo() throws com.mendix.core.CoreException
	{
		return getDatabase_CustomConnectionInfo(getContext());
	}

	/**
	 * @param context
	 * @return value of Database_CustomConnectionInfo
	 */
	public final databasereplication.proxies.CustomConnectionInfo getDatabase_CustomConnectionInfo(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.CustomConnectionInfo result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Database_CustomConnectionInfo.toString());
		if (identifier != null)
			result = databasereplication.proxies.CustomConnectionInfo.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Database_CustomConnectionInfo
	 * @param database_customconnectioninfo
	 */
	public final void setDatabase_CustomConnectionInfo(databasereplication.proxies.CustomConnectionInfo database_customconnectioninfo)
	{
		setDatabase_CustomConnectionInfo(getContext(), database_customconnectioninfo);
	}

	/**
	 * Set value of Database_CustomConnectionInfo
	 * @param context
	 * @param database_customconnectioninfo
	 */
	public final void setDatabase_CustomConnectionInfo(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.CustomConnectionInfo database_customconnectioninfo)
	{
		if (database_customconnectioninfo == null)
			getMendixObject().setValue(context, MemberNames.Database_CustomConnectionInfo.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Database_CustomConnectionInfo.toString(), database_customconnectioninfo.getMendixObject().getId());
	}

	/**
	 * @return value of Database_XMLDocumentTM
	 */
	public final databasereplication.proxies.XMLDocumentTM getDatabase_XMLDocumentTM() throws com.mendix.core.CoreException
	{
		return getDatabase_XMLDocumentTM(getContext());
	}

	/**
	 * @param context
	 * @return value of Database_XMLDocumentTM
	 */
	public final databasereplication.proxies.XMLDocumentTM getDatabase_XMLDocumentTM(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.XMLDocumentTM result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Database_XMLDocumentTM.toString());
		if (identifier != null)
			result = databasereplication.proxies.XMLDocumentTM.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Database_XMLDocumentTM
	 * @param database_xmldocumenttm
	 */
	public final void setDatabase_XMLDocumentTM(databasereplication.proxies.XMLDocumentTM database_xmldocumenttm)
	{
		setDatabase_XMLDocumentTM(getContext(), database_xmldocumenttm);
	}

	/**
	 * Set value of Database_XMLDocumentTM
	 * @param context
	 * @param database_xmldocumenttm
	 */
	public final void setDatabase_XMLDocumentTM(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.XMLDocumentTM database_xmldocumenttm)
	{
		if (database_xmldocumenttm == null)
			getMendixObject().setValue(context, MemberNames.Database_XMLDocumentTM.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Database_XMLDocumentTM.toString(), database_xmldocumenttm.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return databaseMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final databasereplication.proxies.Database that = (databasereplication.proxies.Database) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DatabaseReplication.Database";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
