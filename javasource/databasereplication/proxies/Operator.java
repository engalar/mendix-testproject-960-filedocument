// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package databasereplication.proxies;

public enum Operator
{
	Equal(new java.lang.String[][] { new java.lang.String[] { "en_US", "=" }, new java.lang.String[] { "nl_NL", "=" }, new java.lang.String[] { "en_GB", "=" }, new java.lang.String[] { "en_ZA", "=" } }),
	Larger(new java.lang.String[][] { new java.lang.String[] { "en_US", ">" }, new java.lang.String[] { "nl_NL", ">" }, new java.lang.String[] { "en_GB", ">" }, new java.lang.String[] { "en_ZA", ">" } }),
	LargerOrEqual(new java.lang.String[][] { new java.lang.String[] { "en_US", ">=" }, new java.lang.String[] { "nl_NL", ">=" }, new java.lang.String[] { "en_GB", ">=" }, new java.lang.String[] { "en_ZA", ">=" } }),
	Smaller(new java.lang.String[][] { new java.lang.String[] { "en_US", "<" }, new java.lang.String[] { "nl_NL", "<" }, new java.lang.String[] { "en_GB", "<" }, new java.lang.String[] { "en_ZA", "<" } }),
	SmallerOrEqual(new java.lang.String[][] { new java.lang.String[] { "en_US", "<=" }, new java.lang.String[] { "nl_NL", "<=" }, new java.lang.String[] { "en_GB", "<=" }, new java.lang.String[] { "en_ZA", "<=" } }),
	NotEqual(new java.lang.String[][] { new java.lang.String[] { "en_US", "!=" }, new java.lang.String[] { "nl_NL", "!=" }, new java.lang.String[] { "en_GB", "!=" }, new java.lang.String[] { "en_ZA", "!=" } }),
	Is_NULL(new java.lang.String[][] { new java.lang.String[] { "nl_NL", "Is NULL" }, new java.lang.String[] { "en_US", "Is NULL" }, new java.lang.String[] { "en_GB", "Is NULL" }, new java.lang.String[] { "en_ZA", "Is NULL" } }),
	Is_not_NULL(new java.lang.String[][] { new java.lang.String[] { "nl_NL", "Is not NULL" }, new java.lang.String[] { "en_US", "Is not NULL" }, new java.lang.String[] { "en_GB", "Is not NULL" }, new java.lang.String[] { "en_ZA", "Is not NULL" } }),
	LIKE(new java.lang.String[][] { new java.lang.String[] { "en_US", "LIKE" }, new java.lang.String[] { "nl_NL", "Like" }, new java.lang.String[] { "en_GB", "LIKE" }, new java.lang.String[] { "en_ZA", "LIKE" } });

	private java.util.Map<java.lang.String, java.lang.String> captions;

	private Operator(java.lang.String[][] captionStrings)
	{
		this.captions = new java.util.HashMap<java.lang.String, java.lang.String>();
		for (java.lang.String[] captionString : captionStrings)
			captions.put(captionString[0], captionString[1]);
	}

	public java.lang.String getCaption(java.lang.String languageCode)
	{
		if (captions.containsKey(languageCode))
			return captions.get(languageCode);
		return captions.get("en_US");
	}

	public java.lang.String getCaption()
	{
		return captions.get("en_US");
	}
}
