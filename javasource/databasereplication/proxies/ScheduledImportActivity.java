// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package databasereplication.proxies;

public class ScheduledImportActivity
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject scheduledImportActivityMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DatabaseReplication.ScheduledImportActivity";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		SortOrder("SortOrder"),
		Enabled("Enabled"),
		LastImportedOn("LastImportedOn"),
		LastImportStartedOn("LastImportStartedOn"),
		ImportSingleMapping("ImportSingleMapping"),
		RefNr("RefNr"),
		ImportRefNr("ImportRefNr"),
		Description("Description"),
		SubImportActivity_MainImportActivity("DatabaseReplication.SubImportActivity_MainImportActivity"),
		ImportActivities_ImportCall("DatabaseReplication.ImportActivities_ImportCall");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ScheduledImportActivity(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DatabaseReplication.ScheduledImportActivity"));
	}

	protected ScheduledImportActivity(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject scheduledImportActivityMendixObject)
	{
		if (scheduledImportActivityMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("DatabaseReplication.ScheduledImportActivity", scheduledImportActivityMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DatabaseReplication.ScheduledImportActivity");

		this.scheduledImportActivityMendixObject = scheduledImportActivityMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'ScheduledImportActivity.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static databasereplication.proxies.ScheduledImportActivity initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return databasereplication.proxies.ScheduledImportActivity.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static databasereplication.proxies.ScheduledImportActivity initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new databasereplication.proxies.ScheduledImportActivity(context, mendixObject);
	}

	public static databasereplication.proxies.ScheduledImportActivity load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return databasereplication.proxies.ScheduledImportActivity.initialize(context, mendixObject);
	}

	public static java.util.List<databasereplication.proxies.ScheduledImportActivity> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<databasereplication.proxies.ScheduledImportActivity> result = new java.util.ArrayList<databasereplication.proxies.ScheduledImportActivity>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//DatabaseReplication.ScheduledImportActivity" + xpathConstraint))
			result.add(databasereplication.proxies.ScheduledImportActivity.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of SortOrder
	 */
	public final java.lang.Integer getSortOrder()
	{
		return getSortOrder(getContext());
	}

	/**
	 * @param context
	 * @return value of SortOrder
	 */
	public final java.lang.Integer getSortOrder(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.SortOrder.toString());
	}

	/**
	 * Set value of SortOrder
	 * @param sortorder
	 */
	public final void setSortOrder(java.lang.Integer sortorder)
	{
		setSortOrder(getContext(), sortorder);
	}

	/**
	 * Set value of SortOrder
	 * @param context
	 * @param sortorder
	 */
	public final void setSortOrder(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer sortorder)
	{
		getMendixObject().setValue(context, MemberNames.SortOrder.toString(), sortorder);
	}

	/**
	 * @return value of Enabled
	 */
	public final java.lang.Boolean getEnabled()
	{
		return getEnabled(getContext());
	}

	/**
	 * @param context
	 * @return value of Enabled
	 */
	public final java.lang.Boolean getEnabled(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Enabled.toString());
	}

	/**
	 * Set value of Enabled
	 * @param enabled
	 */
	public final void setEnabled(java.lang.Boolean enabled)
	{
		setEnabled(getContext(), enabled);
	}

	/**
	 * Set value of Enabled
	 * @param context
	 * @param enabled
	 */
	public final void setEnabled(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean enabled)
	{
		getMendixObject().setValue(context, MemberNames.Enabled.toString(), enabled);
	}

	/**
	 * @return value of LastImportedOn
	 */
	public final java.util.Date getLastImportedOn()
	{
		return getLastImportedOn(getContext());
	}

	/**
	 * @param context
	 * @return value of LastImportedOn
	 */
	public final java.util.Date getLastImportedOn(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.LastImportedOn.toString());
	}

	/**
	 * Set value of LastImportedOn
	 * @param lastimportedon
	 */
	public final void setLastImportedOn(java.util.Date lastimportedon)
	{
		setLastImportedOn(getContext(), lastimportedon);
	}

	/**
	 * Set value of LastImportedOn
	 * @param context
	 * @param lastimportedon
	 */
	public final void setLastImportedOn(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date lastimportedon)
	{
		getMendixObject().setValue(context, MemberNames.LastImportedOn.toString(), lastimportedon);
	}

	/**
	 * @return value of LastImportStartedOn
	 */
	public final java.util.Date getLastImportStartedOn()
	{
		return getLastImportStartedOn(getContext());
	}

	/**
	 * @param context
	 * @return value of LastImportStartedOn
	 */
	public final java.util.Date getLastImportStartedOn(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.LastImportStartedOn.toString());
	}

	/**
	 * Set value of LastImportStartedOn
	 * @param lastimportstartedon
	 */
	public final void setLastImportStartedOn(java.util.Date lastimportstartedon)
	{
		setLastImportStartedOn(getContext(), lastimportstartedon);
	}

	/**
	 * Set value of LastImportStartedOn
	 * @param context
	 * @param lastimportstartedon
	 */
	public final void setLastImportStartedOn(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date lastimportstartedon)
	{
		getMendixObject().setValue(context, MemberNames.LastImportStartedOn.toString(), lastimportstartedon);
	}

	/**
	 * @return value of ImportSingleMapping
	 */
	public final java.lang.Boolean getImportSingleMapping()
	{
		return getImportSingleMapping(getContext());
	}

	/**
	 * @param context
	 * @return value of ImportSingleMapping
	 */
	public final java.lang.Boolean getImportSingleMapping(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ImportSingleMapping.toString());
	}

	/**
	 * Set value of ImportSingleMapping
	 * @param importsinglemapping
	 */
	public final void setImportSingleMapping(java.lang.Boolean importsinglemapping)
	{
		setImportSingleMapping(getContext(), importsinglemapping);
	}

	/**
	 * Set value of ImportSingleMapping
	 * @param context
	 * @param importsinglemapping
	 */
	public final void setImportSingleMapping(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean importsinglemapping)
	{
		getMendixObject().setValue(context, MemberNames.ImportSingleMapping.toString(), importsinglemapping);
	}

	/**
	 * @return value of RefNr
	 */
	public final java.lang.Long getRefNr()
	{
		return getRefNr(getContext());
	}

	/**
	 * @param context
	 * @return value of RefNr
	 */
	public final java.lang.Long getRefNr(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.RefNr.toString());
	}

	/**
	 * Set value of RefNr
	 * @param refnr
	 */
	public final void setRefNr(java.lang.Long refnr)
	{
		setRefNr(getContext(), refnr);
	}

	/**
	 * Set value of RefNr
	 * @param context
	 * @param refnr
	 */
	public final void setRefNr(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long refnr)
	{
		getMendixObject().setValue(context, MemberNames.RefNr.toString(), refnr);
	}

	/**
	 * @return value of ImportRefNr
	 */
	public final java.lang.Long getImportRefNr()
	{
		return getImportRefNr(getContext());
	}

	/**
	 * @param context
	 * @return value of ImportRefNr
	 */
	public final java.lang.Long getImportRefNr(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.ImportRefNr.toString());
	}

	/**
	 * Set value of ImportRefNr
	 * @param importrefnr
	 */
	public final void setImportRefNr(java.lang.Long importrefnr)
	{
		setImportRefNr(getContext(), importrefnr);
	}

	/**
	 * Set value of ImportRefNr
	 * @param context
	 * @param importrefnr
	 */
	public final void setImportRefNr(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long importrefnr)
	{
		getMendixObject().setValue(context, MemberNames.ImportRefNr.toString(), importrefnr);
	}

	/**
	 * @return value of Description
	 */
	public final java.lang.String getDescription()
	{
		return getDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of Description
	 */
	public final java.lang.String getDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Description.toString());
	}

	/**
	 * Set value of Description
	 * @param description
	 */
	public final void setDescription(java.lang.String description)
	{
		setDescription(getContext(), description);
	}

	/**
	 * Set value of Description
	 * @param context
	 * @param description
	 */
	public final void setDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String description)
	{
		getMendixObject().setValue(context, MemberNames.Description.toString(), description);
	}

	/**
	 * @return value of SubImportActivity_MainImportActivity
	 */
	public final databasereplication.proxies.ScheduledImportActivity getSubImportActivity_MainImportActivity() throws com.mendix.core.CoreException
	{
		return getSubImportActivity_MainImportActivity(getContext());
	}

	/**
	 * @param context
	 * @return value of SubImportActivity_MainImportActivity
	 */
	public final databasereplication.proxies.ScheduledImportActivity getSubImportActivity_MainImportActivity(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.ScheduledImportActivity result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SubImportActivity_MainImportActivity.toString());
		if (identifier != null)
			result = databasereplication.proxies.ScheduledImportActivity.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SubImportActivity_MainImportActivity
	 * @param subimportactivity_mainimportactivity
	 */
	public final void setSubImportActivity_MainImportActivity(databasereplication.proxies.ScheduledImportActivity subimportactivity_mainimportactivity)
	{
		setSubImportActivity_MainImportActivity(getContext(), subimportactivity_mainimportactivity);
	}

	/**
	 * Set value of SubImportActivity_MainImportActivity
	 * @param context
	 * @param subimportactivity_mainimportactivity
	 */
	public final void setSubImportActivity_MainImportActivity(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.ScheduledImportActivity subimportactivity_mainimportactivity)
	{
		if (subimportactivity_mainimportactivity == null)
			getMendixObject().setValue(context, MemberNames.SubImportActivity_MainImportActivity.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SubImportActivity_MainImportActivity.toString(), subimportactivity_mainimportactivity.getMendixObject().getId());
	}

	/**
	 * @return value of ImportActivities_ImportCall
	 */
	public final databasereplication.proxies.ImportCall getImportActivities_ImportCall() throws com.mendix.core.CoreException
	{
		return getImportActivities_ImportCall(getContext());
	}

	/**
	 * @param context
	 * @return value of ImportActivities_ImportCall
	 */
	public final databasereplication.proxies.ImportCall getImportActivities_ImportCall(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		databasereplication.proxies.ImportCall result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ImportActivities_ImportCall.toString());
		if (identifier != null)
			result = databasereplication.proxies.ImportCall.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ImportActivities_ImportCall
	 * @param importactivities_importcall
	 */
	public final void setImportActivities_ImportCall(databasereplication.proxies.ImportCall importactivities_importcall)
	{
		setImportActivities_ImportCall(getContext(), importactivities_importcall);
	}

	/**
	 * Set value of ImportActivities_ImportCall
	 * @param context
	 * @param importactivities_importcall
	 */
	public final void setImportActivities_ImportCall(com.mendix.systemwideinterfaces.core.IContext context, databasereplication.proxies.ImportCall importactivities_importcall)
	{
		if (importactivities_importcall == null)
			getMendixObject().setValue(context, MemberNames.ImportActivities_ImportCall.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ImportActivities_ImportCall.toString(), importactivities_importcall.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return scheduledImportActivityMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final databasereplication.proxies.ScheduledImportActivity that = (databasereplication.proxies.ScheduledImportActivity) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DatabaseReplication.ScheduledImportActivity";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
