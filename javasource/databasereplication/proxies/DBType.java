// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package databasereplication.proxies;

public enum DBType
{
	SQLServer2005(new java.lang.String[][] { new java.lang.String[] { "en_US", "MS SQLServer 2005" }, new java.lang.String[] { "nl_NL", "MS SQLServer 2005" }, new java.lang.String[] { "en_GB", "MS SQLServer 2005" }, new java.lang.String[] { "en_ZA", "MS SQLServer 2005" } }),
	SQLServer2008(new java.lang.String[][] { new java.lang.String[] { "en_US", "MS SQLServer 2008" }, new java.lang.String[] { "nl_NL", "MS SQLServer 2008" }, new java.lang.String[] { "en_GB", "MS SQLServer 2008" }, new java.lang.String[] { "en_ZA", "MS SQLServer 2008" } }),
	Oracle(new java.lang.String[][] { new java.lang.String[] { "en_US", "Oracle" }, new java.lang.String[] { "nl_NL", "Oracle" }, new java.lang.String[] { "en_GB", "Oracle" }, new java.lang.String[] { "en_ZA", "Oracle" } }),
	Postgres(new java.lang.String[][] { new java.lang.String[] { "en_US", "PostgreSQL" }, new java.lang.String[] { "nl_NL", "PostgreSQL" }, new java.lang.String[] { "en_GB", "PostgreSQL" }, new java.lang.String[] { "en_ZA", "PostgreSQL" } }),
	AS_400(new java.lang.String[][] { new java.lang.String[] { "en_US", "AS/400 - DB2" }, new java.lang.String[] { "nl_NL", "AS/400 - DB2" }, new java.lang.String[] { "en_GB", "AS/400 - DB2" }, new java.lang.String[] { "en_ZA", "AS/400 - DB2" } }),
	Custom(new java.lang.String[][] { new java.lang.String[] { "en_US", "Custom" }, new java.lang.String[] { "nl_NL", "Custom" }, new java.lang.String[] { "en_GB", "Custom" }, new java.lang.String[] { "en_ZA", "Custom" } }),
	Informix(new java.lang.String[][] { new java.lang.String[] { "en_US", "Informix" }, new java.lang.String[] { "nl_NL", "Informix" }, new java.lang.String[] { "en_GB", "Informix" }, new java.lang.String[] { "en_ZA", "Informix" } }),
	DMS2(new java.lang.String[][] { new java.lang.String[] { "en_US", "DMS2" }, new java.lang.String[] { "nl_NL", "DMS2" }, new java.lang.String[] { "en_GB", "DMS2" }, new java.lang.String[] { "en_ZA", "DMS2" } }),
	MSAccess(new java.lang.String[][] { new java.lang.String[] { "en_US", "MSAccess" }, new java.lang.String[] { "en_GB", "MSAccess" }, new java.lang.String[] { "en_ZA", "MSAccess" }, new java.lang.String[] { "nl_NL", "MS Access" } });

	private java.util.Map<java.lang.String, java.lang.String> captions;

	private DBType(java.lang.String[][] captionStrings)
	{
		this.captions = new java.util.HashMap<java.lang.String, java.lang.String>();
		for (java.lang.String[] captionString : captionStrings)
			captions.put(captionString[0], captionString[1]);
	}

	public java.lang.String getCaption(java.lang.String languageCode)
	{
		if (captions.containsKey(languageCode))
			return captions.get(languageCode);
		return captions.get("en_US");
	}

	public java.lang.String getCaption()
	{
		return captions.get("en_US");
	}
}
